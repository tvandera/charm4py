[
    {
        "force_min_processes": 4,
        "path": "interactive/test1.in",
        "interactive": true,
        "requires_py_version": 3
    },
    {
        "force_min_processes": 4,
        "path": "entry_methods/array_element_proxy.py"
    },
    {
        "force_min_processes": 4,
        "path": "entry_methods/group_element_proxy.py"
    },
    {
        "force_min_processes": 2,
        "path": "entry_methods/entrymethod_args_kwargs.py"
    },
    {
        "path": "entry_methods/bcast_globals.py"
    },
    {
        "force_min_processes": 4,
        "path": "entry_methods/retmodes.py"
    },
    {
        "force_min_processes": 4,
        "path": "pool/pool.py"
    },
    {
        "force_min_processes": 4,
        "path": "pool/pool_ncores.py"
    },
    {
        "force_min_processes": 4,
        "path": "charm_remote.py",
        "requires_py_version": 3
    },
    {
        "force_min_processes": 4,
        "path": "array_maps/test1.py"
    },
    {
        "path": "when/test_when_syntax.py"
    },
    {
        "force_min_processes": 4,
        "path": "when/when_test.py"
    },
    {
        "path": "when/when_test2.py"
    },
    {
        "force_min_processes": 4,
        "path": "when/stencil.py"
    },
    {
        "path": "reductions/group_reduction.py"
    },
    {
        "path": "reductions/array_reduction.py"
    },
    {
        "path": "reductions/section_reduction.py"
    },
    {
        "path": "reductions/custom_reduction.py"
    },
    {
        "force_min_processes": 4,
        "path": "reductions/logical_ops.py"
    },
    {
        "path": "reductions/test_gather.py"
    },
    {
        "path": "reductions/future_reduction.py"
    },
    {
        "path": "reductions/bench_reductions.py"
    },
    {
        "path": "reductions/allreduce.py"
    },
    {
        "path": "dcopy/test_dcopy.py"
    },
    {
        "force_min_processes": 4,
        "path": "callbacks/callbacks.py",
        "requires_py_version": 3
    },
    {
        "force_min_processes": 4,
        "path": "callbacks/schedule_cb.py"
    },
    {
        "force_min_processes": 4,
        "path": "collections/test.py"
    },
    {
        "force_min_processes": 4,
        "path": "collections/async_array_creation.py"
    },
    {
        "force_min_processes": 4,
        "path": "collections/proxies_same_name.py"
    },
    {
        "force_min_processes": 4,
        "path": "collections/proxy_eq.py"
    },
    {
        "force_min_processes": 4,
        "path": "exceptions/test.py"
    },
    {
        "force_min_processes": 4,
        "path": "exceptions/pool.py"
    },
    {
        "force_min_processes": 4,
        "path": "topo/topo_treeAPI.py"
    },
    {
        "force_min_processes": 4,
        "path": "topo/topo_treeAPI2.py"
    },
    {
        "force_min_processes": 4,
        "path": "topo/phynode_API.py"
    },
    {
        "path": "migration/test_migrate.py",
        "args": "+balancer GreedyRefineLB +LBDebug 1"
    },
    {
        "path": "migration/test_nonmigratables.py"
    },
    {
        "force_min_processes": 4,
        "path": "migration/chare_migration.py"
    },
    {
        "path": "thread_entry_methods/test1.py"
    },
    {
        "path": "thread_entry_methods/test2.py"
    },
    {
        "path": "thread_entry_methods/test1_when.py"
    },
    {
        "path": "thread_entry_methods/test_main.py"
    },
    {
        "path": "thread_entry_methods/future_reduction.py"
    },
    {
        "path": "thread_entry_methods/future_bcast.py"
    },
    {
        "path": "thread_entry_methods/test_wait.py"
    },
    {
        "path": "thread_entry_methods/threaded_ctors1.py"
    },
    {
        "path": "thread_entry_methods/threaded_ctors2.py"
    },
    {
        "path": "futures/test_futures.py"
    },
    {
        "path": "futures/test_different_coroutines.py"
    },
    {
        "path": "futures/multi_futures.py"
    },
    {
        "force_min_processes": 4,
        "path": "futures/iwait.py"
    },
    {
        "force_min_processes": 4,
        "path": "channels/test1.py"
    },
    {
        "force_min_processes": 4,
        "path": "channels/test2.py"
    },
    {
        "force_min_processes": 4,
        "path": "channels/test_numpy.py"
    },
    {
        "force_min_processes": 4,
        "path": "channels/inorder.py"
    },
    {
        "force_min_processes": 4,
        "path": "channels/iwait.py"
    },
    {
        "force_min_processes": 2,
        "path": "qd/qd.py"
    },
    {
        "force_min_processes": 4,
        "path": "sections/simple.py"
    },
    {
        "force_min_processes": 4,
        "path": "sections/slice.py"
    },
    {
        "force_min_processes": 4,
        "path": "sections/callbacks.py",
        "requires_py_version": 3
    },
    {
        "force_min_processes": 4,
        "path": "sections/multirand-split-combine.py"
    },
    {
        "force_min_processes": 4,
        "path": "sections/constrained_groups.py"
    },
    {
        "force_min_processes": 4,
        "path": "sections/allreduce.py"
    },
    {
        "force_min_processes": 4,
        "path": "examples/dist-task-scheduler/scheduler.py"
    },
    {
        "condition": "numbaInstalled",
        "force_min_processes": 4,
        "path": "examples/fibonacci/fib-numba.py"
    },
    {
        "force_min_processes": 4,
        "path": "examples/fibonacci/fib.py"
    },
    {
        "force_min_processes": 4,
        "path": "examples/hello/group_hello.py"
    },
    {
        "force_min_processes": 4,
        "path": "examples/hello/array_hello.py"
    },
    {
        "path": "examples/jacobi/jacobi2d.py",
        "args": "128 32"
    },
    {
        "force_min_processes": 4,
        "path": "examples/multi-module/main.py"
    },
    {
        "force_min_processes": 4,
        "path": "examples/nqueen/nqueen.py"
    },
    {
        "condition": "numbaInstalled",
        "force_min_processes": 4,
        "path": "examples/nqueen/nqueen-numba.py"
    },
    {
        "path": "examples/parallel-map/square.py"
    },
    {
        "path": "examples/particle/particle.py",
        "args": "8 4 2500 +balancer GreedyRefineLB"
    },
    {
        "path": "examples/simple/start.py"
    },
    {
        "path": "examples/simple/chares.py"
    },
    {
        "path": "examples/simple/reduction.py"
    },
    {
        "path": "examples/simple/hello_world.py"
    },
    {
        "prefix": "exec.sh",
        "path": "examples/simple/hello_world.py"
    },
    {
        "condition": "numbaInstalled",
        "path": "examples/wave2d/wave2d.py",
        "args": "300 -1 --NO-RENDER"
    }
]
